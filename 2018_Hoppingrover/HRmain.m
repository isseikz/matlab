% HRmain.m%% 8th Spacecraft Control Contest: Hopping Rover%% Revision history% 150520 Created% 150619 Integration method is changed to Euler method.% 150630 Reflect the initial torque command in the plots.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 	clear all	close all%	global x_ t_	global svtime cntime dptime	global dth_ smt_ ncont nsave ndisp	global N_pos N_vel N_the N_omg N_cmd N_trq N_state	global t_cmd    global TRQ_MIN TRQ_MAX%	HRconst;	posT = HRprset;% 	entry = HRparticipants;% 	entry = 0;    entry = 1;	addpath(sprintf('./entry%02d',entry));	c = clock;	diary(sprintf('./entry%02d/diary%02d%02d_%02d%02d%02d.txt',...	      entry,c(2),c(3),c(4),c(5),round(c(6))));%	ts = []; xs = [];    SEE_ANIM = 1;	while(1)		pos	= x_(N_pos);		vel	= x_(N_vel);		the = x_(N_the);		omg = x_(N_omg);		state = x_(N_state);		%	  	if ( abs(t_-cntime)<dth_/2 )			t_cmd = Control(pos,vel,the,omg,posT,t_,smt_,state, myInput);%             t_cmd = Control(pos,vel,the,omg,posT,t_,smt_,state);			cntime = cntime + dth_*ncont;            x_(N_cmd) = t_cmd;            x_(N_trq) = min(max(t_cmd,TRQ_MIN),TRQ_MAX);	  	end		if ( abs(t_-svtime)<dth_/2 )			xs = [xs, x_]; ts = [ts; t_];			svtime = svtime + dth_*nsave;	  	end		euler('HRdynmc');		state = HRjudge(posT);	  	if ( abs(t_-dptime)<dth_/2 )	  		%% To see the simple 2D animation 			%% while running the simulation,			%% please set SEE_ANIM = 1;	  		if ( SEE_ANIM ==1 ),	  			HRdisp(ts,xs,posT);	  		end			dptime = dptime + dth_*ndisp;	  	end		if t_ >= smt_			ts = [ts; t_];			xs = [xs, x_];			break		end	end   diary off;% plot results	rmpath(sprintf('./entry%02d',entry));% 	HRsplot(ts,xs,posT);	if ( SEE_ANIM ==1 ),		HRdisp(ts,xs,posT);	end% save simulation result to a text file    fp = fopen(sprintf('./entry%02d/result_%02d.dat',entry,entry),'wt');	for i=1:size(xs,2),		fprintf(fp,'%g',ts(i));		for j=1:size(xs,1),			fprintf(fp,'\t%g',xs(j,i));		end		fprintf(fp,'\n');	end   fclose(fp);