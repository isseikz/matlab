function [] = HRdynmc% HRdynmc.m%% Equations of motion%% Revision history% 150520 Created% 150619 Kinematical check of state is added.% 150619 Check of sign of the contact forces is added.% 150619 Check of size of friction forces is added.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%global x_ dx_ dth_global m_HR l_HR alpha TRQ_MIN TRQ_MAXglobal g global t_cmdglobal N_pos N_the N_vel N_omg global N_trq N_fA N_fB N_state N_t_cmdglobal STATE_A STATE_B STATE_C STATE_Dglobal STATE_E STATE_F STATE_Gpos		= x_(N_pos);the		= x_(N_the);omg		= x_(N_omg);vel		= x_(N_vel);state	= x_(N_state);cos_ta	= cos(the+alpha);sin_ta	= sin(the+alpha);cos_tb	= cos(the-alpha);sin_tb	= sin(the-alpha);velA	= vel - l_HR*omg*[ sin(the+alpha); cos(the+alpha)];velB	= vel + l_HR*omg*[ sin(the-alpha); cos(the-alpha)];%%%trq		= min(max(t_cmd,TRQ_MIN),TRQ_MAX);%%% check state kinematicallystate = set_state(pos,vel,the,omg,state);%%% [domg,fA,fB] = calc_frc_domg(vel,the,omg,state,trq);%%% check the sign of contact forcesswitch state,	case {STATE_B,STATE_C},		% Contact Point was A.		if fA(2)<0,			state = STATE_A;			[domg,fA,fB] = calc_frc_domg(vel,the,omg,state,trq);		end	case {STATE_D,STATE_E},		% Contact Point was B.		if fB(2)<0,			state = STATE_A;			[domg,fA,fB] = calc_frc_domg(vel,the,omg,state,trq);		end	case {STATE_F},				% Contact Points were A&B.		if fA(2)<0,			state = STATE_D;			[domg,fA,fB] = calc_frc_domg(vel,the,omg,state,trq);		end		if fB(2)<0,			state = STATE_B;			[domg,fA,fB] = calc_frc_domg(vel,the,omg,state,trq);		end	case {STATE_G},				% Contact Points were A&B.		if fA(2)<0,			state = STATE_E;			[domg,fA,fB] = calc_frc_domg(vel,the,omg,state,trq);		end		if fB(2)<0,			state = STATE_C;			[domg,fA,fB] = calc_frc_domg(vel,the,omg,state,trq);		endend%%% check the size of friction forces%%%switch state,	case {STATE_C},		% Contact Point was A. Slides.		if abs(fA(1)/m_HR*dth_)>abs(velA(1)),			fA(1) = -velA(1)*m_HR/dth_;		end	case {STATE_E},		% Contact Point was B. Slides.		if abs(fB(1)/m_HR*dth_)>abs(velB(1)),			fB(1) = -velB(1)*m_HR/dth_;		end	case {STATE_G},				% Contact Points were A&B. Slides.		if ( (abs(fA(1)/m_HR*dth_)>abs(velA(1)))|(abs(fB(1)/m_HR*dth_)>abs(velB(1))) ),			fA(1) = -vel(1)*m_HR/dth_/2;			fB(1) = -vel(1)*m_HR/dth_/2;		endenddx_(N_pos)	= vel;dx_(N_the)	= omg;dx_(N_vel)	= (fA+fB-[0;m_HR*g])/m_HR;dx_(N_omg)	= domg;%%%x_(N_state)	= state;x_(N_fA)	= fA;x_(N_fB)	= fB;x_(N_trq)	= trq;x_(N_t_cmd)	= t_cmd;