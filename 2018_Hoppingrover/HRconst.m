function [] = HRconst% HRconst.m%% Parameter Setting%% Revision history% 150520 Created%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%global m_HR I_HR r_HR h_HR l_HR alpha TRQ_MIN TRQ_MAXglobal g mu_sta mu_dyn e_vx e_vyglobal STATE_A STATE_B STATE_C STATE_Dglobal STATE_E STATE_F STATE_Gglobal VXA_MIN VYA_MINglobal TARGET_WIDTH TARGET_PERIODglobal dth_ smt_ nde_ ncont nsave ndispglobal N_pos N_the N_vel N_omg global N_trq N_fA N_fB N_stateglobal N_posAk N_velAk N_posBk N_velBkglobal N_t_cmd N_TTRTP%%% Hopping rover parametersm_HR	= 1.0;				% mass [kg]r_HR	= 0.1/2;			% half width [m]h_HR	= 0.1/2;			% half height [m]l_HR	= sqrt(r_HR^2 + h_HR^2);I_HR	= (1/3)*m_HR*(r_HR^2 + h_HR^2);							% moment of inertia [kgm2]alpha	= atan(h_HR/r_HR);	% angle alpha [rad]TRQ_MIN	= -5.0e-4;          % negative maximum torque limit [Nm]TRQ_MAX	=  5.0e-4;          % positive maximum torque limit [Nm]%%% Asteroid environment parametersg		= 9.8e-5;			% gravity on the surface of the asteroid [m/s2]mu_sta	= 0.6;				% static friction coefficient [-]mu_dyn	= 0.5;				% dynamic friction coefficient [-]e_vx	= 0.8;				% coefficient of repulsive inpulse (horizontal)e_vy	= 0.2;				% coefficient of repulsive inpulse (vertical)%%% Hopping rover sliding statesSTATE_A	= 1; % (Float)STATE_B	= 2; % Stop, Contact at Point ASTATE_C	= 3; % Slide,Contact at Point ASTATE_D	= 4; % Stop, Contact at Point BSTATE_E = 5; % Slide,Contact at Point BSTATE_F = 6; % Stop, Contact at Point A&BSTATE_G = 7; % Slide,Contact at Point A&B%VXA_MIN	= 1e-6;				% "stationary" speed [m/s]VYA_MIN	= 1e-6;				% "stationary" speed [m/s]%%% Contest parameterTARGET_WIDTH 	= 0.1;		% box within which the rover needs to keep its contact point [m], eg. 0.1 -> +/- 0.05TARGET_PERIOD	= 5;		% the time which the rover needs to keep its contact point within the error box [s]%%% Simulation environment parametersdth_   = 0.01;	% step width of numerical integration [s]smt_   = 300;	% total simulation time [s]nde_   = 22;	% number of state variablesncont  =round(0.1/dth_);	% control frequency(=control period/integration step width)nsave  =   1;	% data restoration frequencyndisp  = round(1/dth_);	% data display frequency% index to the saved variablesN_pos	=  1: 2;	% rover position (2x1)(asteroid frame)N_the	=  3: 3;	% rover attitude (1x1)(asteroid frame)N_vel	=  4: 5;	% rover velocity (2x1)(asteroid frame)N_omg	=  6: 6;	% rover angular velocity (1x1)(asteroid frame)N_posAk	=  7: 8;	% position of contact point A, kinematics (2x1)N_velAk	=  9:10;	% velocity of contact point A, kinematics (2x1)N_posBk	= 11:12;	% position of contact point B, kinematics (2x1)N_velBk	= 13:14;	% velocity of contact point B, kinematics (2x1)N_trq	= 15:15;	% applied torque (1x1)N_fA	= 16:17;	% friction, contact force at Point A (2x1)N_fB	= 18:19;	% friction, contact force at Point B (2x1)N_state	= 20:20;	% state (1x1)(0:A, 1:B, 2:C, 3:D)N_t_cmd	= 21:21;	% commanded torque (1x1)N_TTRTP	= 22;		% time to reach the target point (1x1)%%%%%